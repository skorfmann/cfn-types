/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` ".*{1,255}".
 */
export type ParameterValues = string[];
export type S3Region = string;
export type S3BucketName = string;
export type S3KeyPrefix = string;

/**
 * The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
 */
export interface AwsSsmAssociation {
  /**
   * Unique identifier of the association.
   */
  AssociationId?: string;
  /**
   * The name of the association.
   */
  AssociationName?: string;
  /**
   * The version of the SSM document to associate with the target.
   */
  DocumentVersion?: string;
  /**
   * The ID of the instance that the SSM document is associated with.
   */
  InstanceId?: string;
  /**
   * The name of the SSM document.
   */
  Name: string;
  /**
   * Parameter values that the SSM document uses at runtime.
   */
  Parameters?: {
    [k: string]: ParameterValues;
  };
  /**
   * A Cron or Rate expression that specifies when the association is applied to the target.
   */
  ScheduleExpression?: string;
  /**
   * The targets that the SSM document sends commands to.
   *
   * @minItems 0
   * @maxItems 5
   */
  Targets?:
    | []
    | [Target]
    | [Target, Target]
    | [Target, Target, Target]
    | [Target, Target, Target, Target]
    | [Target, Target, Target, Target, Target];
  OutputLocation?: InstanceAssociationOutputLocation;
  AutomationTargetParameterName?: string;
  MaxErrors?: string;
  MaxConcurrency?: string;
  ComplianceSeverity?: "CRITICAL" | "HIGH" | "MEDIUM" | "LOW" | "UNSPECIFIED";
  SyncCompliance?: "AUTO" | "MANUAL";
  WaitForSuccessTimeoutSeconds?: number;
  ApplyOnlyAtCronInterval?: boolean;
  CalendarNames?: string[];
  ScheduleOffset?: number;
}
export interface Target {
  Key: string;
  /**
   * @minItems 0
   * @maxItems 50
   */
  Values: string[];
}
export interface InstanceAssociationOutputLocation {
  S3Location?: S3OutputLocation;
}
export interface S3OutputLocation {
  OutputS3Region?: S3Region;
  OutputS3BucketName?: S3BucketName;
  OutputS3KeyPrefix?: S3KeyPrefix;
}
