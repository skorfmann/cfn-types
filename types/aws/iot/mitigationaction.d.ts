/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
 */
export interface AwsIotMitigationaction {
  /**
   * A unique identifier for the mitigation action.
   */
  ActionName?: string;
  RoleArn: string;
  /**
   * An array of key-value pairs to apply to this resource.
   *
   * @maxItems 50
   */
  Tags?: Tag[];
  ActionParams: ActionParams;
  MitigationActionArn?: string;
  MitigationActionId?: string;
}
/**
 * A key-value pair to associate with a resource.
 */
export interface Tag {
  /**
   * The tag's key.
   */
  Key: string;
  /**
   * The tag's value.
   */
  Value: string;
}
/**
 * The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
 */
export interface ActionParams {
  AddThingsToThingGroupParams?: AddThingsToThingGroupParams;
  EnableIoTLoggingParams?: EnableIoTLoggingParams;
  PublishFindingToSnsParams?: PublishFindingToSnsParams;
  ReplaceDefaultPolicyVersionParams?: ReplaceDefaultPolicyVersionParams;
  UpdateCACertificateParams?: UpdateCACertificateParams;
  UpdateDeviceCertificateParams?: UpdateDeviceCertificateParams;
}
/**
 * Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.
 */
export interface AddThingsToThingGroupParams {
  /**
   * Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.
   */
  OverrideDynamicGroups?: boolean;
  /**
   * The list of groups to which you want to add the things that triggered the mitigation action.
   *
   * @minItems 1
   * @maxItems 10
   */
  ThingGroupNames:
    | [string]
    | [string, string]
    | [string, string, string]
    | [string, string, string, string]
    | [string, string, string, string, string]
    | [string, string, string, string, string, string]
    | [string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string];
}
/**
 * Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
 */
export interface EnableIoTLoggingParams {
  /**
   *  Specifies which types of information are logged.
   */
  LogLevel: "DEBUG" | "INFO" | "ERROR" | "WARN" | "UNSET_VALUE";
  /**
   *  The ARN of the IAM role used for logging.
   */
  RoleArnForLogging: string;
}
/**
 * Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
 */
export interface PublishFindingToSnsParams {
  /**
   * The ARN of the topic to which you want to publish the findings.
   */
  TopicArn: string;
}
/**
 * Parameters to define a mitigation action that adds a blank policy to restrict permissions.
 */
export interface ReplaceDefaultPolicyVersionParams {
  TemplateName: "BLANK_POLICY" | "UNSET_VALUE";
}
/**
 * Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
 */
export interface UpdateCACertificateParams {
  Action: "DEACTIVATE" | "UNSET_VALUE";
}
/**
 * Parameters to define a mitigation action that changes the state of the device certificate to inactive.
 */
export interface UpdateDeviceCertificateParams {
  Action: "DEACTIVATE" | "UNSET_VALUE";
}
