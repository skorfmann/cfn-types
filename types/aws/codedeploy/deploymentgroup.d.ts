/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::CodeDeploy::DeploymentGroup
 */
export interface AwsCodedeployDeploymentgroup {
  OnPremisesTagSet?: OnPremisesTagSet;
  ApplicationName: string;
  DeploymentStyle?: DeploymentStyle;
  ServiceRoleArn: string;
  BlueGreenDeploymentConfiguration?: BlueGreenDeploymentConfiguration;
  AutoScalingGroups?: string[];
  Ec2TagSet?: EC2TagSet;
  OutdatedInstancesStrategy?: string;
  TriggerConfigurations?: TriggerConfig[];
  Deployment?: Deployment;
  DeploymentConfigName?: string;
  AlarmConfiguration?: AlarmConfiguration;
  Ec2TagFilters?: EC2TagFilter[];
  ECSServices?: ECSService[];
  AutoRollbackConfiguration?: AutoRollbackConfiguration;
  LoadBalancerInfo?: LoadBalancerInfo;
  Id?: string;
  DeploymentGroupName?: string;
  Tags?: Tag[];
  OnPremisesInstanceTagFilters?: TagFilter[];
}
export interface OnPremisesTagSet {
  OnPremisesTagSetList?: OnPremisesTagSetListObject[];
}
export interface OnPremisesTagSetListObject {
  OnPremisesTagGroup?: TagFilter[];
}
export interface TagFilter {
  Value?: string;
  Type?: string;
  Key?: string;
}
export interface DeploymentStyle {
  DeploymentOption?: string;
  DeploymentType?: string;
}
export interface BlueGreenDeploymentConfiguration {
  GreenFleetProvisioningOption?: GreenFleetProvisioningOption;
  DeploymentReadyOption?: DeploymentReadyOption;
  TerminateBlueInstancesOnDeploymentSuccess?: BlueInstanceTerminationOption;
}
export interface GreenFleetProvisioningOption {
  Action?: string;
}
export interface DeploymentReadyOption {
  WaitTimeInMinutes?: number;
  ActionOnTimeout?: string;
}
export interface BlueInstanceTerminationOption {
  TerminationWaitTimeInMinutes?: number;
  Action?: string;
}
export interface EC2TagSet {
  Ec2TagSetList?: EC2TagSetListObject[];
}
export interface EC2TagSetListObject {
  Ec2TagGroup?: EC2TagFilter[];
}
export interface EC2TagFilter {
  Value?: string;
  Type?: string;
  Key?: string;
}
export interface TriggerConfig {
  TriggerTargetArn?: string;
  TriggerName?: string;
  TriggerEvents?: string[];
}
export interface Deployment {
  Description?: string;
  Revision: RevisionLocation;
  IgnoreApplicationStopFailures?: boolean;
}
export interface RevisionLocation {
  S3Location?: S3Location;
  GitHubLocation?: GitHubLocation;
  RevisionType?: string;
}
export interface S3Location {
  BundleType?: string;
  Bucket: string;
  ETag?: string;
  Version?: string;
  Key: string;
}
export interface GitHubLocation {
  Repository: string;
  CommitId: string;
}
export interface AlarmConfiguration {
  Alarms?: Alarm[];
  IgnorePollAlarmFailure?: boolean;
  Enabled?: boolean;
}
export interface Alarm {
  Name?: string;
}
export interface ECSService {
  ServiceName: string;
  ClusterName: string;
}
export interface AutoRollbackConfiguration {
  Events?: string[];
  Enabled?: boolean;
}
export interface LoadBalancerInfo {
  TargetGroupInfoList?: TargetGroupInfo[];
  ElbInfoList?: ELBInfo[];
  TargetGroupPairInfoList?: TargetGroupPairInfo[];
}
export interface TargetGroupInfo {
  Name?: string;
}
export interface ELBInfo {
  Name?: string;
}
export interface TargetGroupPairInfo {
  ProdTrafficRoute?: TrafficRoute;
  TestTrafficRoute?: TrafficRoute;
  TargetGroups?: TargetGroupInfo[];
}
export interface TrafficRoute {
  ListenerArns?: string[];
}
export interface Tag {
  Value: string;
  Key: string;
}
