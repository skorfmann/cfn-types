/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * An ObjectType resource of Amazon Connect Customer Profiles
 */
export interface AwsCustomerprofilesObjecttype {
  /**
   * The unique name of the domain.
   */
  DomainName: string;
  /**
   * The name of the profile object type.
   */
  ObjectTypeName?: string;
  /**
   * Indicates whether a profile should be created when data is received.
   */
  AllowProfileCreation?: boolean;
  /**
   * Description of the profile object type.
   */
  Description?: string;
  /**
   * The default encryption key
   */
  EncryptionKey?: string;
  /**
   * The default number of days until the data within the domain expires.
   */
  ExpirationDays?: number;
  /**
   * A list of the name and ObjectType field.
   */
  Fields?: FieldMap[];
  /**
   * A list of unique keys that can be used to map data to the profile.
   */
  Keys?: KeyMap[];
  /**
   * The time of this integration got created.
   */
  CreatedAt?: string;
  /**
   * The time of this integration got last updated at.
   */
  LastUpdatedAt?: string;
  /**
   * The tags (keys and values) associated with the integration.
   *
   * @minItems 0
   * @maxItems 50
   */
  Tags?: Tag[];
  /**
   * A unique identifier for the object template.
   */
  TemplateId?: string;
}
export interface FieldMap {
  Name?: string;
  ObjectTypeField?: ObjectTypeField;
}
/**
 * Represents a field in a ProfileObjectType.
 */
export interface ObjectTypeField {
  /**
   * A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.
   */
  Source?: string;
  /**
   * The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.
   */
  Target?: string;
  /**
   * The content type of the field. Used for determining equality when searching.
   */
  ContentType?: "STRING" | "NUMBER" | "PHONE_NUMBER" | "EMAIL_ADDRESS" | "NAME";
}
export interface KeyMap {
  Name?: string;
  ObjectTypeKeyList?: ObjectTypeKey[];
}
/**
 * An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
 */
export interface ObjectTypeKey {
  /**
   * The reference for the key name of the fields map.
   */
  FieldNames?: string[];
  /**
   * The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
   */
  StandardIdentifiers?: ("PROFILE" | "UNIQUE" | "SECONDARY" | "LOOKUP_ONLY" | "NEW_ONLY")[];
}
export interface Tag {
  Key: string;
  Value: string;
}
