/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The target platform for the environment.
 */
export type EngineType = "microfocus" | "bluage";
/**
 * Defines the storage configuration for an environment.
 */
export type StorageConfiguration =
  | {
      Efs: EfsStorageConfiguration;
    }
  | {
      Fsx: FsxStorageConfiguration;
    };

/**
 * Represents a runtime environment that can run migrated mainframe applications.
 */
export interface AwsM2Environment {
  /**
   * The description of the environment.
   */
  Description?: string;
  EngineType: EngineType;
  /**
   * The version of the runtime engine for the environment.
   */
  EngineVersion?: string;
  /**
   * The Amazon Resource Name (ARN) of the runtime environment.
   */
  EnvironmentArn?: string;
  /**
   * The unique identifier of the environment.
   */
  EnvironmentId?: string;
  HighAvailabilityConfig?: HighAvailabilityConfig;
  /**
   * The type of instance underlying the environment.
   */
  InstanceType: string;
  /**
   * The ID or the Amazon Resource Name (ARN) of the customer managed KMS Key used for encrypting environment-related resources.
   */
  KmsKeyId?: string;
  /**
   * The name of the environment.
   */
  Name: string;
  /**
   * Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
   */
  PreferredMaintenanceWindow?: string;
  /**
   * Specifies whether the environment is publicly accessible.
   */
  PubliclyAccessible?: boolean;
  /**
   * The list of security groups for the VPC associated with this environment.
   */
  SecurityGroupIds?: string[];
  /**
   * The storage configurations defined for the runtime environment.
   */
  StorageConfigurations?: StorageConfiguration[];
  /**
   * The unique identifiers of the subnets assigned to this runtime environment.
   */
  SubnetIds?: string[];
  Tags?: TagMap;
}
/**
 * Defines the details of a high availability configuration.
 */
export interface HighAvailabilityConfig {
  DesiredCapacity: number;
}
/**
 * Defines the storage configuration for an Amazon EFS file system.
 */
export interface EfsStorageConfiguration {
  /**
   * The file system identifier.
   */
  FileSystemId: string;
  /**
   * The mount point for the file system.
   */
  MountPoint: string;
}
/**
 * Defines the storage configuration for an Amazon FSx file system.
 */
export interface FsxStorageConfiguration {
  /**
   * The file system identifier.
   */
  FileSystemId: string;
  /**
   * The mount point for the file system.
   */
  MountPoint: string;
}
/**
 * Tags associated to this environment.
 */
export interface TagMap {
  /**
   * This interface was referenced by `TagMap`'s JSON-Schema definition
   * via the `patternProperty` "^(?!aws:).+$".
   */
  [k: string]: string;
}
