/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::ApiGateway::Method
 */
export interface AwsApigatewayMethod {
  /**
   * Indicates whether the method requires clients to submit a valid API key.
   */
  ApiKeyRequired?: boolean;
  /**
   * A list of authorization scopes configured on the method.
   */
  AuthorizationScopes?: string[];
  /**
   * The method's authorization type.
   */
  AuthorizationType?: "NONE" | "AWS_IAM" | "CUSTOM" | "COGNITO_USER_POOLS";
  /**
   * The identifier of the authorizer to use on this method.
   */
  AuthorizerId?: string;
  /**
   * The backend system that the method calls when it receives a request.
   */
  HttpMethod: string;
  Integration?: Integration;
  /**
   * The responses that can be sent to the client who calls the method.
   */
  MethodResponses?: MethodResponse[];
  /**
   * A friendly operation name for the method.
   */
  OperationName?: string;
  /**
   * The resources that are used for the request's content type. Specify request models as key-value pairs (string-to-string mapping), with a content type as the key and a Model resource name as the value.
   */
  RequestModels?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * The request parameters that API Gateway accepts. Specify request parameters as key-value pairs (string-to-Boolean mapping), with a source as the key and a Boolean as the value.
   */
  RequestParameters?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: boolean;
  };
  /**
   * The ID of the associated request validator.
   */
  RequestValidatorId?: string;
  /**
   * The ID of an API Gateway resource.
   */
  ResourceId: string;
  /**
   * The ID of the RestApi resource in which API Gateway creates the method.
   */
  RestApiId: string;
}
/**
 * The backend system that the method calls when it receives a request.
 */
export interface Integration {
  /**
   * A list of request parameters whose values API Gateway caches.
   */
  CacheKeyParameters?: string[];
  /**
   * An API-specific tag group of related cached parameters.
   */
  CacheNamespace?: string;
  /**
   * The ID of the VpcLink used for the integration when connectionType=VPC_LINK, otherwise undefined.
   */
  ConnectionId?: string;
  /**
   * The type of the network connection to the integration endpoint.
   */
  ConnectionType?: "INTERNET" | "VPC_LINK";
  /**
   * Specifies how to handle request payload content type conversions.
   */
  ContentHandling?: "CONVERT_TO_BINARY" | "CONVERT_TO_TEXT";
  /**
   * The credentials that are required for the integration.
   */
  Credentials?: string;
  /**
   * The integration's HTTP method type.
   */
  IntegrationHttpMethod?: string;
  /**
   * The response that API Gateway provides after a method's backend completes processing a request.
   */
  IntegrationResponses?: IntegrationResponse[];
  /**
   * Indicates when API Gateway passes requests to the targeted backend.
   */
  PassthroughBehavior?: "WHEN_NO_MATCH" | "WHEN_NO_TEMPLATES" | "NEVER";
  /**
   * The request parameters that API Gateway sends with the backend request.
   */
  RequestParameters?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * A map of Apache Velocity templates that are applied on the request payload.
   */
  RequestTemplates?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * Custom timeout between 50 and 29,000 milliseconds.
   */
  TimeoutInMillis?: number;
  /**
   * The type of backend that your method is running.
   */
  Type: "AWS" | "AWS_PROXY" | "HTTP" | "HTTP_PROXY" | "MOCK";
  /**
   * The Uniform Resource Identifier (URI) for the integration.
   */
  Uri?: string;
}
export interface IntegrationResponse {
  /**
   * Specifies how to handle request payload content type conversions.
   */
  ContentHandling?: "CONVERT_TO_BINARY" | "CONVERT_TO_TEXT";
  /**
   * The response parameters from the backend response that API Gateway sends to the method response.
   */
  ResponseParameters?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * The templates that are used to transform the integration response body. Specify templates as key-value pairs (string-to-string mappings), with a content type as the key and a template as the value.
   */
  ResponseTemplates?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * A regular expression that specifies which error strings or status codes from the backend map to the integration response.
   */
  SelectionPattern?: string;
  /**
   * The status code that API Gateway uses to map the integration response to a MethodResponse status code.
   */
  StatusCode: string;
}
export interface MethodResponse {
  /**
   * The resources used for the response's content type. Specify response models as key-value pairs (string-to-string maps), with a content type as the key and a Model resource name as the value.
   */
  ResponseModels?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  /**
   * Response parameters that API Gateway sends to the client that called a method. Specify response parameters as key-value pairs (string-to-Boolean maps), with a destination as the key and a Boolean as the value.
   */
  ResponseParameters?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: boolean;
  };
  /**
   * The method response's status code, which you map to an IntegrationResponse.
   */
  StatusCode: string;
}
