/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::CodeBuild::Project
 */
export interface AwsCodebuildProject {
  Description?: string;
  ResourceAccessRole?: string;
  VpcConfig?: VpcConfig;
  SecondarySources?: Source[];
  EncryptionKey?: string;
  SecondaryArtifacts?: Artifacts[];
  Source: Source;
  Name?: string;
  LogsConfig?: LogsConfig;
  ServiceRole: string;
  QueuedTimeoutInMinutes?: number;
  SecondarySourceVersions?: ProjectSourceVersion[];
  Tags?: Tag[];
  SourceVersion?: string;
  Triggers?: ProjectTriggers;
  Artifacts: Artifacts;
  BadgeEnabled?: boolean;
  FileSystemLocations?: ProjectFileSystemLocation[];
  Environment: Environment;
  ConcurrentBuildLimit?: number;
  Visibility?: string;
  Id?: string;
  Arn?: string;
  BuildBatchConfig?: ProjectBuildBatchConfig;
  TimeoutInMinutes?: number;
  Cache?: ProjectCache;
}
export interface VpcConfig {
  Subnets?: string[];
  VpcId?: string;
  SecurityGroupIds?: string[];
}
export interface Source {
  Type: string;
  ReportBuildStatus?: boolean;
  Auth?: SourceAuth;
  SourceIdentifier?: string;
  BuildSpec?: string;
  GitCloneDepth?: number;
  BuildStatusConfig?: BuildStatusConfig;
  GitSubmodulesConfig?: GitSubmodulesConfig;
  InsecureSsl?: boolean;
  Location?: string;
}
export interface SourceAuth {
  Resource?: string;
  Type: string;
}
export interface BuildStatusConfig {
  Context?: string;
  TargetUrl?: string;
}
export interface GitSubmodulesConfig {
  FetchSubmodules: boolean;
}
export interface Artifacts {
  Path?: string;
  Type: string;
  ArtifactIdentifier?: string;
  OverrideArtifactName?: boolean;
  Packaging?: string;
  EncryptionDisabled?: boolean;
  Location?: string;
  Name?: string;
  NamespaceType?: string;
}
export interface LogsConfig {
  CloudWatchLogs?: CloudWatchLogsConfig;
  S3Logs?: S3LogsConfig;
}
export interface CloudWatchLogsConfig {
  Status: string;
  GroupName?: string;
  StreamName?: string;
}
export interface S3LogsConfig {
  Status: string;
  EncryptionDisabled?: boolean;
  Location?: string;
}
export interface ProjectSourceVersion {
  SourceIdentifier: string;
  SourceVersion?: string;
}
export interface Tag {
  Value: string;
  Key: string;
}
export interface ProjectTriggers {
  BuildType?: string;
  FilterGroups?: FilterGroup[];
  Webhook?: boolean;
}
export interface FilterGroup {}
export interface ProjectFileSystemLocation {
  MountPoint: string;
  Type: string;
  Identifier: string;
  MountOptions?: string;
  Location: string;
}
export interface Environment {
  Type: string;
  EnvironmentVariables?: EnvironmentVariable[];
  PrivilegedMode?: boolean;
  ImagePullCredentialsType?: string;
  Image: string;
  RegistryCredential?: RegistryCredential;
  ComputeType: string;
  Certificate?: string;
}
export interface EnvironmentVariable {
  Value: string;
  Type?: string;
  Name: string;
}
export interface RegistryCredential {
  Credential: string;
  CredentialProvider: string;
}
export interface ProjectBuildBatchConfig {
  CombineArtifacts?: boolean;
  ServiceRole?: string;
  BatchReportMode?: string;
  TimeoutInMins?: number;
  Restrictions?: BatchRestrictions;
}
export interface BatchRestrictions {
  ComputeTypesAllowed?: string[];
  MaximumBuildsAllowed?: number;
}
export interface ProjectCache {
  Modes?: string[];
  Type: string;
  Location?: string;
}
