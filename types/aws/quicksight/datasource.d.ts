/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type DataSourceErrorInfoType =
  | "ACCESS_DENIED"
  | "COPY_SOURCE_NOT_FOUND"
  | "TIMEOUT"
  | "ENGINE_VERSION_NOT_SUPPORTED"
  | "UNKNOWN_HOST"
  | "GENERIC_SQL_FAILURE"
  | "CONFLICT"
  | "UNKNOWN";
export type ResourceStatus =
  | "CREATION_IN_PROGRESS"
  | "CREATION_SUCCESSFUL"
  | "CREATION_FAILED"
  | "UPDATE_IN_PROGRESS"
  | "UPDATE_SUCCESSFUL"
  | "UPDATE_FAILED"
  | "DELETED";
export type DataSourceType =
  | "ADOBE_ANALYTICS"
  | "AMAZON_ELASTICSEARCH"
  | "AMAZON_OPENSEARCH"
  | "ATHENA"
  | "AURORA"
  | "AURORA_POSTGRESQL"
  | "AWS_IOT_ANALYTICS"
  | "DATABRICKS"
  | "GITHUB"
  | "JIRA"
  | "MARIADB"
  | "MYSQL"
  | "ORACLE"
  | "POSTGRESQL"
  | "PRESTO"
  | "REDSHIFT"
  | "S3"
  | "SALESFORCE"
  | "SERVICENOW"
  | "SNOWFLAKE"
  | "SPARK"
  | "SQLSERVER"
  | "TERADATA"
  | "TWITTER"
  | "TIMESTREAM";

/**
 * Definition of the AWS::QuickSight::DataSource Resource Type.
 */
export interface AwsQuicksightDatasource {
  /**
   * <p>A set of alternate data source parameters that you want to share for the credentials
   *             stored with this data source. The credentials are applied in tandem with the data source
   *             parameters when you copy a data source by using a create or update request. The API
   *             operation compares the <code>DataSourceParameters</code> structure that's in the request
   *             with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the
   *             structures are an exact match, the request is allowed to use the credentials from this
   *             existing data source. If the <code>AlternateDataSourceParameters</code> list is null,
   *             the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>
   *             are automatically allowed.</p>
   *
   * @minItems 1
   * @maxItems 50
   */
  AlternateDataSourceParameters?: [DataSourceParameters, ...DataSourceParameters[]];
  /**
   * <p>The Amazon Resource Name (ARN) of the data source.</p>
   */
  Arn?: string;
  AwsAccountId?: string;
  /**
   * <p>The time that this data source was created.</p>
   */
  CreatedTime?: string;
  Credentials?: DataSourceCredentials;
  DataSourceId?: string;
  DataSourceParameters?: DataSourceParameters;
  ErrorInfo?: DataSourceErrorInfo;
  /**
   * <p>The last time that this data source was updated.</p>
   */
  LastUpdatedTime?: string;
  /**
   * <p>A display name for the data source.</p>
   */
  Name?: string;
  /**
   * <p>A list of resource permissions on the data source.</p>
   *
   * @minItems 1
   * @maxItems 64
   */
  Permissions?: [ResourcePermission, ...ResourcePermission[]];
  SslProperties?: SslProperties;
  Status?: ResourceStatus;
  /**
   * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>
   *
   * @minItems 1
   * @maxItems 200
   */
  Tags?: [Tag, ...Tag[]];
  Type?: DataSourceType;
  VpcConnectionProperties?: VpcConnectionProperties;
}
/**
 * <p>The parameters that Amazon QuickSight uses to connect to your underlying data source.
 *             This is a variant type structure. For this structure to be valid, only one of the
 *             attributes can be non-null.</p>
 */
export interface DataSourceParameters {
  AuroraPostgreSqlParameters?: AuroraPostgreSqlParameters;
  TeradataParameters?: TeradataParameters;
  RdsParameters?: RdsParameters;
  AthenaParameters?: AthenaParameters;
  SparkParameters?: SparkParameters;
  MariaDbParameters?: MariaDbParameters;
  OracleParameters?: OracleParameters;
  PrestoParameters?: PrestoParameters;
  RedshiftParameters?: RedshiftParameters;
  MySqlParameters?: MySqlParameters;
  SqlServerParameters?: SqlServerParameters;
  SnowflakeParameters?: SnowflakeParameters;
  AmazonElasticsearchParameters?: AmazonElasticsearchParameters;
  AmazonOpenSearchParameters?: AmazonOpenSearchParameters;
  PostgreSqlParameters?: PostgreSqlParameters;
  AuroraParameters?: AuroraParameters;
  S3Parameters?: S3Parameters;
  DatabricksParameters?: DatabricksParameters;
  [k: string]: unknown;
}
/**
 * <p>Amazon Aurora with PostgreSQL compatibility parameters.</p>
 */
export interface AuroraPostgreSqlParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Teradata parameters.</p>
 */
export interface TeradataParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon RDS parameters.</p>
 */
export interface RdsParameters {
  /**
   * <p>Instance ID.</p>
   */
  InstanceId: string;
  /**
   * <p>Database.</p>
   */
  Database: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon Athena parameters.</p>
 */
export interface AthenaParameters {
  /**
   * <p>The workgroup that Amazon Athena uses.</p>
   */
  WorkGroup?: string;
  [k: string]: unknown;
}
/**
 * <p>Spark parameters.</p>
 */
export interface SparkParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>MariaDB parameters.</p>
 */
export interface MariaDbParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
export interface OracleParameters {
  Port: number;
  Database: string;
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Presto parameters.</p>
 */
export interface PrestoParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Host.</p>
   */
  Host: string;
  /**
   * <p>Catalog.</p>
   */
  Catalog: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if
 *             <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and
 *             <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>
 */
export interface RedshiftParameters {
  /**
   * <p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are
   *             provided.</p>
   */
  ClusterId?: string;
  /**
   * <p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>
   */
  Port?: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>
   */
  Host?: string;
  [k: string]: unknown;
}
/**
 * <p>MySQL parameters.</p>
 */
export interface MySqlParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>SQL Server parameters.</p>
 */
export interface SqlServerParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Snowflake parameters.</p>
 */
export interface SnowflakeParameters {
  /**
   * <p>Warehouse.</p>
   */
  Warehouse: string;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon Elasticsearch Service parameters.</p>
 */
export interface AmazonElasticsearchParameters {
  /**
   * <p>The Amazon Elasticsearch Service domain.</p>
   */
  Domain: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon OpenSearch Service parameters.</p>
 */
export interface AmazonOpenSearchParameters {
  /**
   * <p>The Amazon OpenSearch Service domain.</p>
   */
  Domain: string;
  [k: string]: unknown;
}
/**
 * <p>PostgreSQL parameters.</p>
 */
export interface PostgreSqlParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>Amazon Aurora parameters.</p>
 */
export interface AuroraParameters {
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>Database.</p>
   */
  Database: string;
  /**
   * <p>Host.</p>
   */
  Host: string;
  [k: string]: unknown;
}
/**
 * <p>S3 parameters.</p>
 */
export interface S3Parameters {
  ManifestFileLocation: ManifestFileLocation;
  [k: string]: unknown;
}
/**
 * <p>Amazon S3 manifest file location.</p>
 */
export interface ManifestFileLocation {
  /**
   * <p>Amazon S3 bucket.</p>
   */
  Bucket: string;
  /**
   * <p>Amazon S3 key that identifies an object.</p>
   */
  Key: string;
  [k: string]: unknown;
}
/**
 * <p>Databricks parameters.</p>
 */
export interface DatabricksParameters {
  /**
   * <p>Host.</p>
   */
  Host: string;
  /**
   * <p>Port.</p>
   */
  Port: number;
  /**
   * <p>The HTTP Path of the Databricks data source.</p>
   */
  SqlEndpointPath: string;
  [k: string]: unknown;
}
/**
 * <p>Data source credentials. This is a variant type structure. For this structure to be
 *             valid, only one of the attributes can be non-null.</p>
 */
export interface DataSourceCredentials {
  /**
   * <p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you
   *             want to use. When <code>CopySourceArn</code> is not null, the credential pair from the
   *             data source in the ARN is used as the credentials for the
   *             <code>DataSourceCredentials</code> structure.</p>
   */
  CopySourceArn?: string;
  CredentialPair?: CredentialPair;
  /**
   * <p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>
   */
  SecretArn?: string;
  [k: string]: unknown;
}
/**
 * <p>The combination of user name and password that are used as credentials.</p>
 */
export interface CredentialPair {
  /**
   * <p>A set of alternate data source parameters that you want to share for these
   *             credentials. The credentials are applied in tandem with the data source parameters when
   *             you copy a data source by using a create or update request. The API operation compares
   *             the <code>DataSourceParameters</code> structure that's in the request with the
   *             structures in the <code>AlternateDataSourceParameters</code> allow list. If the
   *             structures are an exact match, the request is allowed to use the new data source with
   *             the existing credentials. If the <code>AlternateDataSourceParameters</code> list is
   *             null, the <code>DataSourceParameters</code> originally used with these
   *                 <code>Credentials</code> is automatically allowed.</p>
   *
   * @minItems 1
   * @maxItems 50
   */
  AlternateDataSourceParameters?: [DataSourceParameters, ...DataSourceParameters[]];
  /**
   * <p>User name.</p>
   */
  Username: string;
  /**
   * <p>Password.</p>
   */
  Password: string;
  [k: string]: unknown;
}
/**
 * <p>Error information for the data source creation or update.</p>
 */
export interface DataSourceErrorInfo {
  Type?: DataSourceErrorInfoType;
  /**
   * <p>Error message.</p>
   */
  Message?: string;
  [k: string]: unknown;
}
/**
 * <p>Permission for the resource.</p>
 */
export interface ResourcePermission {
  /**
   * <p>The IAM action to grant or revoke permissions on.</p>
   *
   * @minItems 1
   * @maxItems 16
   */
  Actions:
    | [string]
    | [string, string]
    | [string, string, string]
    | [string, string, string, string]
    | [string, string, string, string, string]
    | [string, string, string, string, string, string]
    | [string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string, string, string]
    | [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    | [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
  /**
   * <p>The Amazon Resource Name (ARN) of the principal. This can be one of the
   *             following:</p>
   *         <ul>
   *             <li>
   *                 <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>
   *             </li>
   *             <li>
   *                 <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>
   *             </li>
   *             <li>
   *                 <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight
   *                     ARN. Use this option only to share resources (templates) across AWS accounts.
   *                     (This is less common.) </p>
   *             </li>
   *          </ul>
   */
  Principal: string;
  [k: string]: unknown;
}
/**
 * <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your
 *             underlying data source.</p>
 */
export interface SslProperties {
  /**
   * <p>A Boolean option to control whether SSL should be disabled.</p>
   */
  DisableSsl?: boolean;
  [k: string]: unknown;
}
/**
 * <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
 *             resource.</p>
 */
export interface Tag {
  /**
   * <p>Tag value.</p>
   */
  Value: string;
  /**
   * <p>Tag key.</p>
   */
  Key: string;
  [k: string]: unknown;
}
/**
 * <p>VPC connection properties.</p>
 */
export interface VpcConnectionProperties {
  /**
   * <p>The Amazon Resource Name (ARN) for the VPC connection.</p>
   */
  VpcConnectionArn: string;
  [k: string]: unknown;
}
