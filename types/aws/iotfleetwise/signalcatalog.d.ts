/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Node = Branch | Sensor | Actuator | Attribute;
export type NodeDataType =
  | "INT8"
  | "UINT8"
  | "INT16"
  | "UINT16"
  | "INT32"
  | "UINT32"
  | "INT64"
  | "UINT64"
  | "BOOLEAN"
  | "FLOAT"
  | "DOUBLE"
  | "STRING"
  | "UNIX_TIMESTAMP"
  | "INT8_ARRAY"
  | "UINT8_ARRAY"
  | "INT16_ARRAY"
  | "UINT16_ARRAY"
  | "INT32_ARRAY"
  | "UINT32_ARRAY"
  | "INT64_ARRAY"
  | "UINT64_ARRAY"
  | "BOOLEAN_ARRAY"
  | "FLOAT_ARRAY"
  | "DOUBLE_ARRAY"
  | "STRING_ARRAY"
  | "UNIX_TIMESTAMP_ARRAY"
  | "UNKNOWN";
/**
 * @minItems 1
 */
export type AllowedValues = [string, ...string[]];

/**
 * Definition of AWS::IoTFleetWise::SignalCatalog Resource Type
 */
export interface AwsIotfleetwiseSignalcatalog {
  Arn?: string;
  CreationTime?: string;
  Description?: string;
  LastModificationTime?: string;
  Name?: string;
  NodeCounts?: NodeCounts;
  /**
   * @minItems 1
   * @maxItems 500
   */
  Nodes?: [Node, ...Node[]];
  /**
   * @minItems 0
   * @maxItems 50
   */
  Tags?: Tag[];
}
export interface NodeCounts {
  TotalNodes?: number;
  TotalBranches?: number;
  TotalSensors?: number;
  TotalAttributes?: number;
  TotalActuators?: number;
}
export interface Branch {
  Branch?: Branch1;
}
export interface Branch1 {
  FullyQualifiedName: string;
  Description?: string;
}
export interface Sensor {
  Sensor?: Sensor1;
}
export interface Sensor1 {
  FullyQualifiedName: string;
  DataType: NodeDataType;
  Description?: string;
  Unit?: string;
  AllowedValues?: AllowedValues;
  Min?: number;
  Max?: number;
}
export interface Actuator {
  Actuator?: Actuator1;
}
export interface Actuator1 {
  FullyQualifiedName: string;
  DataType: NodeDataType;
  Description?: string;
  Unit?: string;
  AllowedValues?: AllowedValues;
  Min?: number;
  Max?: number;
  AssignedValue?: string;
}
export interface Attribute {
  Attribute?: Attribute1;
}
export interface Attribute1 {
  FullyQualifiedName: string;
  DataType: NodeDataType;
  Description?: string;
  Unit?: string;
  AllowedValues?: AllowedValues;
  Min?: number;
  Max?: number;
  AssignedValue?: string;
  DefaultValue?: string;
}
export interface Tag {
  Key: string;
  Value: string;
}
