/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::AppMesh::GatewayRoute
 */
export interface AwsAppmeshGatewayroute {
  Uid?: string;
  MeshName: string;
  VirtualGatewayName: string;
  MeshOwner?: string;
  ResourceOwner?: string;
  GatewayRouteName?: string;
  Id?: string;
  Arn?: string;
  Spec: GatewayRouteSpec;
  Tags?: Tag[];
}
export interface GatewayRouteSpec {
  HttpRoute?: HttpGatewayRoute;
  Http2Route?: HttpGatewayRoute;
  GrpcRoute?: GrpcGatewayRoute;
  Priority?: number;
}
export interface HttpGatewayRoute {
  Action: HttpGatewayRouteAction;
  Match: HttpGatewayRouteMatch;
}
export interface HttpGatewayRouteAction {
  Target: GatewayRouteTarget;
  Rewrite?: HttpGatewayRouteRewrite;
}
export interface GatewayRouteTarget {
  VirtualService: GatewayRouteVirtualService;
  Port?: number;
}
export interface GatewayRouteVirtualService {
  VirtualServiceName: string;
}
export interface HttpGatewayRouteRewrite {
  Path?: HttpGatewayRoutePathRewrite;
  Hostname?: GatewayRouteHostnameRewrite;
  Prefix?: HttpGatewayRoutePrefixRewrite;
}
export interface HttpGatewayRoutePathRewrite {
  Exact?: string;
}
export interface GatewayRouteHostnameRewrite {
  DefaultTargetHostname?: string;
}
export interface HttpGatewayRoutePrefixRewrite {
  Value?: string;
  DefaultPrefix?: string;
}
export interface HttpGatewayRouteMatch {
  Path?: HttpPathMatch;
  Headers?: HttpGatewayRouteHeader[];
  Port?: number;
  Hostname?: GatewayRouteHostnameMatch;
  Prefix?: string;
  Method?: string;
  QueryParameters?: QueryParameter[];
}
export interface HttpPathMatch {
  Regex?: string;
  Exact?: string;
}
export interface HttpGatewayRouteHeader {
  Invert?: boolean;
  Name: string;
  Match?: HttpGatewayRouteHeaderMatch;
}
export interface HttpGatewayRouteHeaderMatch {
  Suffix?: string;
  Exact?: string;
  Prefix?: string;
  Regex?: string;
  Range?: GatewayRouteRangeMatch;
}
export interface GatewayRouteRangeMatch {
  Start: number;
  End: number;
}
export interface GatewayRouteHostnameMatch {
  Suffix?: string;
  Exact?: string;
}
export interface QueryParameter {
  Name: string;
  Match?: HttpQueryParameterMatch;
}
export interface HttpQueryParameterMatch {
  Exact?: string;
}
export interface GrpcGatewayRoute {
  Action: GrpcGatewayRouteAction;
  Match: GrpcGatewayRouteMatch;
}
export interface GrpcGatewayRouteAction {
  Target: GatewayRouteTarget;
  Rewrite?: GrpcGatewayRouteRewrite;
}
export interface GrpcGatewayRouteRewrite {
  Hostname?: GatewayRouteHostnameRewrite;
}
export interface GrpcGatewayRouteMatch {
  Hostname?: GatewayRouteHostnameMatch;
  Metadata?: GrpcGatewayRouteMetadata[];
  ServiceName?: string;
  Port?: number;
}
export interface GrpcGatewayRouteMetadata {
  Invert?: boolean;
  Name: string;
  Match?: GatewayRouteMetadataMatch;
}
export interface GatewayRouteMetadataMatch {
  Suffix?: string;
  Exact?: string;
  Prefix?: string;
  Regex?: string;
  Range?: GatewayRouteRangeMatch;
}
export interface Tag {
  Value: string;
  Key: string;
}
