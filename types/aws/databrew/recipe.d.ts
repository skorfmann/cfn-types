/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Secondary input
 */
export type SecondaryInput = {
  S3InputDefinition?: S3Location;
  DataCatalogInputDefinition?: DataCatalogInputDefinition;
} & SecondaryInput1;
export type SecondaryInput1 =
  | {
      [k: string]: unknown;
    }
  | {
      [k: string]: unknown;
    };

/**
 * Resource schema for AWS::DataBrew::Recipe.
 */
export interface AwsDatabrewRecipe {
  /**
   * Description of the recipe
   */
  Description?: string;
  /**
   * Recipe name
   */
  Name: string;
  Steps: RecipeStep[];
  Tags?: Tag[];
}
export interface RecipeStep {
  Action: Action;
  /**
   * Condition expressions applied to the step action
   */
  ConditionExpressions?: ConditionExpression[];
}
export interface Action {
  /**
   * Step action operation
   */
  Operation: string;
  Parameters?: RecipeParameters | ParameterMap;
}
export interface RecipeParameters {
  AggregateFunction?: string;
  Base?: string;
  CaseStatement?: string;
  CategoryMap?: string;
  CharsToRemove?: string;
  CollapseConsecutiveWhitespace?: string;
  ColumnDataType?: string;
  ColumnRange?: string;
  Count?: string;
  CustomCharacters?: string;
  CustomStopWords?: string;
  CustomValue?: string;
  DatasetsColumns?: string;
  DateAddValue?: string;
  DateTimeFormat?: string;
  DateTimeParameters?: string;
  DeleteOtherRows?: string;
  Delimiter?: string;
  EndPattern?: string;
  EndPosition?: string;
  EndValue?: string;
  ExpandContractions?: string;
  Exponent?: string;
  FalseString?: string;
  GroupByAggFunctionOptions?: string;
  GroupByColumns?: string;
  HiddenColumns?: string;
  IgnoreCase?: string;
  IncludeInSplit?: string;
  Interval?: string;
  IsText?: string;
  JoinKeys?: string;
  JoinType?: string;
  LeftColumns?: string;
  Limit?: string;
  LowerBound?: string;
  MapType?: string;
  ModeType?: string;
  MultiLine?: boolean;
  NumRows?: string;
  NumRowsAfter?: string;
  NumRowsBefore?: string;
  OrderByColumn?: string;
  OrderByColumns?: string;
  Other?: string;
  Pattern?: string;
  PatternOption1?: string;
  PatternOption2?: string;
  PatternOptions?: string;
  Period?: string;
  Position?: string;
  RemoveAllPunctuation?: string;
  RemoveAllQuotes?: string;
  RemoveAllWhitespace?: string;
  RemoveCustomCharacters?: string;
  RemoveCustomValue?: string;
  RemoveLeadingAndTrailingPunctuation?: string;
  RemoveLeadingAndTrailingQuotes?: string;
  RemoveLeadingAndTrailingWhitespace?: string;
  RemoveLetters?: string;
  RemoveNumbers?: string;
  RemoveSourceColumn?: string;
  RemoveSpecialCharacters?: string;
  RightColumns?: string;
  SampleSize?: string;
  SampleType?: string;
  SecondInput?: string;
  SecondaryInputs?: SecondaryInput[];
  SourceColumn?: string;
  SourceColumn1?: string;
  SourceColumn2?: string;
  SourceColumns?: string;
  StartColumnIndex?: string;
  StartPattern?: string;
  StartPosition?: string;
  StartValue?: string;
  StemmingMode?: string;
  StepCount?: string;
  StepIndex?: string;
  StopWordsMode?: string;
  Strategy?: string;
  /**
   * @minItems 1
   * @maxItems 1
   */
  SheetNames?: [string];
  /**
   * @minItems 1
   * @maxItems 1
   */
  SheetIndexes?: [number];
  TargetColumn?: string;
  TargetColumnNames?: string;
  TargetDateFormat?: string;
  TargetIndex?: string;
  TimeZone?: string;
  TokenizerPattern?: string;
  TrueString?: string;
  UdfLang?: string;
  Units?: string;
  UnpivotColumn?: string;
  UpperBound?: string;
  UseNewDataFrame?: string;
  Value?: string;
  Value1?: string;
  Value2?: string;
  ValueColumn?: string;
  ViewFrame?: string;
  /**
   * Input
   */
  Input?:
    | {
        [k: string]: unknown;
      }
    | {
        [k: string]: unknown;
      };
}
/**
 * Input location
 */
export interface S3Location {
  Bucket: string;
  Key?: string;
}
export interface DataCatalogInputDefinition {
  /**
   * Catalog id
   */
  CatalogId?: string;
  /**
   * Database name
   */
  DatabaseName?: string;
  /**
   * Table name
   */
  TableName?: string;
  TempDirectory?: S3Location;
}
export interface ParameterMap {
  /**
   * This interface was referenced by `ParameterMap`'s JSON-Schema definition
   * via the `patternProperty` "^[A-Za-z0-9]{1,128}$".
   */
  [k: string]: string;
}
/**
 * Condition expressions applied to the step action
 */
export interface ConditionExpression {
  /**
   * Input condition to be applied to the target column
   */
  Condition: string;
  /**
   * Value of the condition
   */
  Value?: string;
  /**
   * Name of the target column
   */
  TargetColumn: string;
}
/**
 * A key-value pair to associate with a resource.
 */
export interface Tag {
  Key: string;
  Value: string;
}
