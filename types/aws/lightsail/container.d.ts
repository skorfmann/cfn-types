/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::Lightsail::Container
 */
export interface AwsLightsailContainer {
  /**
   * The name for the container service.
   */
  ServiceName: string;
  /**
   * The power specification for the container service.
   */
  Power: string;
  ContainerArn?: string;
  /**
   * The scale specification for the container service.
   */
  Scale: number;
  /**
   * The public domain names to use with the container service, such as example.com and www.example.com.
   */
  PublicDomainNames?: PublicDomainName[];
  ContainerServiceDeployment?: ContainerServiceDeployment;
  /**
   * A Boolean value to indicate whether the container service is disabled.
   */
  IsDisabled?: boolean;
  /**
   * The publicly accessible URL of the container service.
   */
  Url?: string;
  /**
   * An array of key-value pairs to apply to this resource.
   */
  Tags?: Tag[];
}
/**
 * The public domain name to use with the container service, such as example.com and www.example.com.
 */
export interface PublicDomainName {
  CertificateName?: string;
  /**
   * An object that describes the configuration for the containers of the deployment.
   */
  DomainNames?: string[];
}
/**
 * Describes a container deployment configuration of an Amazon Lightsail container service.
 */
export interface ContainerServiceDeployment {
  /**
   * An object that describes the configuration for the containers of the deployment.
   */
  Containers?: Container[];
  PublicEndpoint?: PublicEndpoint;
}
/**
 * Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
 */
export interface Container {
  /**
   * The name of the container.
   */
  ContainerName?: string;
  /**
   * The launch command for the container.
   */
  Command?: string[];
  /**
   * The environment variables of the container.
   */
  Environment?: EnvironmentVariable[];
  /**
   * The name of the image used for the container.
   */
  Image?: string;
  /**
   * The open firewall ports of the container.
   */
  Ports?: PortInfo[];
}
export interface EnvironmentVariable {
  Variable?: string;
  Value?: string;
}
export interface PortInfo {
  Port?: string;
  Protocol?: string;
}
/**
 * An object that describes the endpoint of the deployment.
 */
export interface PublicEndpoint {
  /**
   * The name of the container for the endpoint.
   */
  ContainerName?: string;
  /**
   * The port of the container to which traffic is forwarded to.
   */
  ContainerPort?: number;
  HealthCheckConfig?: HealthCheckConfig;
}
/**
 * An object that describes the health check configuration of the container.
 */
export interface HealthCheckConfig {
  /**
   * The number of consecutive health checks successes required before moving the container to the Healthy state. The default value is 2.
   */
  HealthyThreshold?: number;
  /**
   * The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is 5.
   */
  IntervalSeconds?: number;
  /**
   * The path on the container on which to perform the health check. The default value is /.
   */
  Path?: string;
  /**
   * The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. You can specify multiple values (for example, 200,202) or a range of values (for example, 200-299).
   */
  SuccessCodes?: string;
  /**
   * The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is 2.
   */
  TimeoutSeconds?: number;
  /**
   * The number of consecutive health check failures required before moving the container to the Unhealthy state. The default value is 2.
   */
  UnhealthyThreshold?: number;
}
/**
 * A key-value pair to associate with a resource.
 */
export interface Tag {
  /**
   * The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
   */
  Key: string;
  /**
   * The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
   */
  Value?: string;
}
