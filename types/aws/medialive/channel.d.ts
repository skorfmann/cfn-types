/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::MediaLive::Channel
 */
export interface AwsMedialiveChannel {
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  Destinations?: OutputDestination[];
  Vpc?: VpcOutputSettings;
  LogLevel?: string;
  RoleArn?: string;
  Name?: string;
  ChannelClass?: string;
  EncoderSettings?: EncoderSettings;
  CdiInputSpecification?: CdiInputSpecification;
  Id?: string;
  Arn?: string;
  Inputs?: string[];
  Tags?: {
    [k: string]: unknown;
  };
}
export interface InputAttachment {
  InputAttachmentName?: string;
  InputId?: string;
  AutomaticInputFailoverSettings?: AutomaticInputFailoverSettings;
  InputSettings?: InputSettings;
}
export interface AutomaticInputFailoverSettings {
  ErrorClearTimeMsec?: number;
  FailoverConditions?: FailoverCondition[];
  InputPreference?: string;
  SecondaryInputId?: string;
}
export interface FailoverCondition {
  FailoverConditionSettings?: FailoverConditionSettings;
}
export interface FailoverConditionSettings {
  AudioSilenceSettings?: AudioSilenceFailoverSettings;
  VideoBlackSettings?: VideoBlackFailoverSettings;
  InputLossSettings?: InputLossFailoverSettings;
}
export interface AudioSilenceFailoverSettings {
  AudioSelectorName?: string;
  AudioSilenceThresholdMsec?: number;
}
export interface VideoBlackFailoverSettings {
  BlackDetectThreshold?: number;
  VideoBlackThresholdMsec?: number;
}
export interface InputLossFailoverSettings {
  InputLossThresholdMsec?: number;
}
export interface InputSettings {
  Scte35Pid?: number;
  DeblockFilter?: string;
  FilterStrength?: number;
  InputFilter?: string;
  SourceEndBehavior?: string;
  VideoSelector?: VideoSelector;
  Smpte2038DataPreference?: string;
  AudioSelectors?: AudioSelector[];
  CaptionSelectors?: CaptionSelector[];
  DenoiseFilter?: string;
  NetworkInputSettings?: NetworkInputSettings;
}
export interface VideoSelector {
  ColorSpaceSettings?: VideoSelectorColorSpaceSettings;
  ColorSpaceUsage?: string;
  SelectorSettings?: VideoSelectorSettings;
  ColorSpace?: string;
}
export interface VideoSelectorColorSpaceSettings {
  Hdr10Settings?: Hdr10Settings;
}
export interface Hdr10Settings {
  MaxCll?: number;
  MaxFall?: number;
}
export interface VideoSelectorSettings {
  VideoSelectorProgramId?: VideoSelectorProgramId;
  VideoSelectorPid?: VideoSelectorPid;
}
export interface VideoSelectorProgramId {
  ProgramId?: number;
}
export interface VideoSelectorPid {
  Pid?: number;
}
export interface AudioSelector {
  SelectorSettings?: AudioSelectorSettings;
  Name?: string;
}
export interface AudioSelectorSettings {
  AudioLanguageSelection?: AudioLanguageSelection;
  AudioTrackSelection?: AudioTrackSelection;
  AudioPidSelection?: AudioPidSelection;
  AudioHlsRenditionSelection?: AudioHlsRenditionSelection;
}
export interface AudioLanguageSelection {
  LanguageCode?: string;
  LanguageSelectionPolicy?: string;
}
export interface AudioTrackSelection {
  Tracks?: AudioTrack[];
}
export interface AudioTrack {
  Track?: number;
}
export interface AudioPidSelection {
  Pid?: number;
}
export interface AudioHlsRenditionSelection {
  GroupId?: string;
  Name?: string;
}
export interface CaptionSelector {
  LanguageCode?: string;
  SelectorSettings?: CaptionSelectorSettings;
  Name?: string;
}
export interface CaptionSelectorSettings {
  DvbSubSourceSettings?: DvbSubSourceSettings;
  Scte27SourceSettings?: Scte27SourceSettings;
  AribSourceSettings?: AribSourceSettings;
  EmbeddedSourceSettings?: EmbeddedSourceSettings;
  Scte20SourceSettings?: Scte20SourceSettings;
  TeletextSourceSettings?: TeletextSourceSettings;
  AncillarySourceSettings?: AncillarySourceSettings;
}
export interface DvbSubSourceSettings {
  OcrLanguage?: string;
  Pid?: number;
}
export interface Scte27SourceSettings {
  OcrLanguage?: string;
  Pid?: number;
}
export interface AribSourceSettings {}
export interface EmbeddedSourceSettings {
  Source608ChannelNumber?: number;
  Scte20Detection?: string;
  Source608TrackNumber?: number;
  Convert608To708?: string;
}
export interface Scte20SourceSettings {
  Source608ChannelNumber?: number;
  Convert608To708?: string;
}
export interface TeletextSourceSettings {
  OutputRectangle?: CaptionRectangle;
  PageNumber?: string;
}
export interface CaptionRectangle {
  Height?: number;
  TopOffset?: number;
  Width?: number;
  LeftOffset?: number;
}
export interface AncillarySourceSettings {
  SourceAncillaryChannelNumber?: number;
}
export interface NetworkInputSettings {
  ServerValidation?: string;
  HlsInputSettings?: HlsInputSettings;
}
export interface HlsInputSettings {
  Scte35Source?: string;
  BufferSegments?: number;
  RetryInterval?: number;
  Retries?: number;
  Bandwidth?: number;
}
export interface InputSpecification {
  Codec?: string;
  MaximumBitrate?: string;
  Resolution?: string;
}
export interface OutputDestination {
  Id?: string;
  MultiplexSettings?: MultiplexProgramChannelDestinationSettings;
  Settings?: OutputDestinationSettings[];
  MediaPackageSettings?: MediaPackageOutputDestinationSettings[];
}
export interface MultiplexProgramChannelDestinationSettings {
  ProgramName?: string;
  MultiplexId?: string;
}
export interface OutputDestinationSettings {
  StreamName?: string;
  PasswordParam?: string;
  Username?: string;
  Url?: string;
}
export interface MediaPackageOutputDestinationSettings {
  ChannelId?: string;
}
export interface VpcOutputSettings {
  SecurityGroupIds?: string[];
  SubnetIds?: string[];
  PublicAddressAllocationIds?: string[];
}
export interface EncoderSettings {
  AudioDescriptions?: AudioDescription[];
  VideoDescriptions?: VideoDescription[];
  GlobalConfiguration?: GlobalConfiguration;
  MotionGraphicsConfiguration?: MotionGraphicsConfiguration;
  FeatureActivations?: FeatureActivations;
  CaptionDescriptions?: CaptionDescription[];
  AvailConfiguration?: AvailConfiguration;
  OutputGroups?: OutputGroup[];
  AvailBlanking?: AvailBlanking;
  NielsenConfiguration?: NielsenConfiguration;
  BlackoutSlate?: BlackoutSlate;
  TimecodeConfig?: TimecodeConfig;
}
export interface AudioDescription {
  AudioNormalizationSettings?: AudioNormalizationSettings;
  LanguageCode?: string;
  RemixSettings?: RemixSettings;
  AudioSelectorName?: string;
  StreamName?: string;
  LanguageCodeControl?: string;
  AudioType?: string;
  AudioTypeControl?: string;
  CodecSettings?: AudioCodecSettings;
  Name?: string;
  AudioWatermarkingSettings?: AudioWatermarkSettings;
}
export interface AudioNormalizationSettings {
  TargetLkfs?: number;
  Algorithm?: string;
  AlgorithmControl?: string;
}
export interface RemixSettings {
  ChannelsOut?: number;
  ChannelsIn?: number;
  ChannelMappings?: AudioChannelMapping[];
}
export interface AudioChannelMapping {
  InputChannelLevels?: InputChannelLevel[];
  OutputChannel?: number;
}
export interface InputChannelLevel {
  InputChannel?: number;
  Gain?: number;
}
export interface AudioCodecSettings {
  Eac3Settings?: Eac3Settings;
  Ac3Settings?: Ac3Settings;
  Mp2Settings?: Mp2Settings;
  PassThroughSettings?: PassThroughSettings;
  WavSettings?: WavSettings;
  AacSettings?: AacSettings;
}
export interface Eac3Settings {
  CodingMode?: string;
  SurroundMode?: string;
  PassthroughControl?: string;
  Dialnorm?: number;
  LoRoSurroundMixLevel?: number;
  PhaseControl?: string;
  LtRtCenterMixLevel?: number;
  LfeFilter?: string;
  LfeControl?: string;
  Bitrate?: number;
  DrcLine?: string;
  DcFilter?: string;
  MetadataControl?: string;
  LtRtSurroundMixLevel?: number;
  LoRoCenterMixLevel?: number;
  DrcRf?: string;
  AttenuationControl?: string;
  BitstreamMode?: string;
  SurroundExMode?: string;
  StereoDownmix?: string;
}
export interface Ac3Settings {
  CodingMode?: string;
  DrcProfile?: string;
  MetadataControl?: string;
  Dialnorm?: number;
  LfeFilter?: string;
  BitstreamMode?: string;
  Bitrate?: number;
}
export interface Mp2Settings {
  CodingMode?: string;
  SampleRate?: number;
  Bitrate?: number;
}
export interface PassThroughSettings {}
export interface WavSettings {
  CodingMode?: string;
  SampleRate?: number;
  BitDepth?: number;
}
export interface AacSettings {
  CodingMode?: string;
  RateControlMode?: string;
  SampleRate?: number;
  InputType?: string;
  VbrQuality?: string;
  RawFormat?: string;
  Spec?: string;
  Bitrate?: number;
  Profile?: string;
}
export interface AudioWatermarkSettings {
  NielsenWatermarksSettings?: NielsenWatermarksSettings;
}
export interface NielsenWatermarksSettings {
  NielsenNaesIiNwSettings?: NielsenNaesIiNw;
  NielsenDistributionType?: string;
  NielsenCbetSettings?: NielsenCBET;
}
export interface NielsenNaesIiNw {
  CheckDigitString?: string;
  Sid?: number;
}
export interface NielsenCBET {
  CbetStepaside?: string;
  CbetCheckDigitString?: string;
  Csid?: string;
}
export interface VideoDescription {
  ScalingBehavior?: string;
  RespondToAfd?: string;
  Height?: number;
  Sharpness?: number;
  Width?: number;
  CodecSettings?: VideoCodecSettings;
  Name?: string;
}
export interface VideoCodecSettings {
  FrameCaptureSettings?: FrameCaptureSettings;
  H264Settings?: H264Settings;
  Mpeg2Settings?: Mpeg2Settings;
  H265Settings?: H265Settings;
}
export interface FrameCaptureSettings {
  CaptureInterval?: number;
  CaptureIntervalUnits?: string;
}
export interface H264Settings {
  NumRefFrames?: number;
  TemporalAq?: string;
  Slices?: number;
  FramerateControl?: string;
  QvbrQualityLevel?: number;
  FramerateNumerator?: number;
  ParControl?: string;
  GopClosedCadence?: number;
  FlickerAq?: string;
  Profile?: string;
  QualityLevel?: string;
  MinIInterval?: number;
  SceneChangeDetect?: string;
  ForceFieldPictures?: string;
  FramerateDenominator?: number;
  Softness?: number;
  GopSize?: number;
  AdaptiveQuantization?: string;
  FilterSettings?: H264FilterSettings;
  ColorSpaceSettings?: H264ColorSpaceSettings;
  EntropyEncoding?: string;
  SpatialAq?: string;
  ParDenominator?: number;
  FixedAfd?: string;
  GopSizeUnits?: string;
  AfdSignaling?: string;
  Bitrate?: number;
  ParNumerator?: number;
  RateControlMode?: string;
  ScanType?: string;
  BufSize?: number;
  TimecodeInsertion?: string;
  ColorMetadata?: string;
  BufFillPct?: number;
  GopBReference?: string;
  LookAheadRateControl?: string;
  Level?: string;
  MaxBitrate?: number;
  Syntax?: string;
  SubgopLength?: string;
  GopNumBFrames?: number;
}
export interface H264FilterSettings {
  TemporalFilterSettings?: TemporalFilterSettings;
}
export interface TemporalFilterSettings {
  PostFilterSharpening?: string;
  Strength?: string;
}
export interface H264ColorSpaceSettings {
  Rec601Settings?: Rec601Settings;
  Rec709Settings?: Rec709Settings;
  ColorSpacePassthroughSettings?: ColorSpacePassthroughSettings;
}
export interface Rec601Settings {}
export interface Rec709Settings {}
export interface ColorSpacePassthroughSettings {}
export interface Mpeg2Settings {
  ColorSpace?: string;
  FixedAfd?: string;
  GopSizeUnits?: string;
  FramerateNumerator?: number;
  GopClosedCadence?: number;
  AfdSignaling?: string;
  DisplayAspectRatio?: string;
  ScanType?: string;
  TimecodeInsertion?: string;
  ColorMetadata?: string;
  FramerateDenominator?: number;
  GopSize?: number;
  AdaptiveQuantization?: string;
  SubgopLength?: string;
  FilterSettings?: Mpeg2FilterSettings;
  GopNumBFrames?: number;
}
export interface Mpeg2FilterSettings {
  TemporalFilterSettings?: TemporalFilterSettings;
}
export interface H265Settings {
  Slices?: number;
  QvbrQualityLevel?: number;
  FramerateNumerator?: number;
  GopClosedCadence?: number;
  FlickerAq?: string;
  Profile?: string;
  MinIInterval?: number;
  SceneChangeDetect?: string;
  FramerateDenominator?: number;
  GopSize?: number;
  AdaptiveQuantization?: string;
  FilterSettings?: H265FilterSettings;
  AlternativeTransferFunction?: string;
  ColorSpaceSettings?: H265ColorSpaceSettings;
  Tier?: string;
  ParDenominator?: number;
  FixedAfd?: string;
  GopSizeUnits?: string;
  AfdSignaling?: string;
  Bitrate?: number;
  ParNumerator?: number;
  RateControlMode?: string;
  ScanType?: string;
  BufSize?: number;
  TimecodeInsertion?: string;
  ColorMetadata?: string;
  LookAheadRateControl?: string;
  Level?: string;
  MaxBitrate?: number;
}
export interface H265FilterSettings {
  TemporalFilterSettings?: TemporalFilterSettings;
}
export interface H265ColorSpaceSettings {
  Rec601Settings?: Rec601Settings;
  Rec709Settings?: Rec709Settings;
  ColorSpacePassthroughSettings?: ColorSpacePassthroughSettings;
  Hdr10Settings?: Hdr10Settings;
}
export interface GlobalConfiguration {
  InputEndAction?: string;
  OutputTimingSource?: string;
  OutputLockingMode?: string;
  SupportLowFramerateInputs?: string;
  InitialAudioGain?: number;
  InputLossBehavior?: InputLossBehavior;
}
export interface InputLossBehavior {
  InputLossImageType?: string;
  InputLossImageSlate?: InputLocation;
  InputLossImageColor?: string;
  RepeatFrameMsec?: number;
  BlackFrameMsec?: number;
}
export interface InputLocation {
  PasswordParam?: string;
  Username?: string;
  Uri?: string;
}
export interface MotionGraphicsConfiguration {
  MotionGraphicsSettings?: MotionGraphicsSettings;
  MotionGraphicsInsertion?: string;
}
export interface MotionGraphicsSettings {
  HtmlMotionGraphicsSettings?: HtmlMotionGraphicsSettings;
}
export interface HtmlMotionGraphicsSettings {}
export interface FeatureActivations {
  InputPrepareScheduleActions?: string;
}
export interface CaptionDescription {
  DestinationSettings?: CaptionDestinationSettings;
  CaptionSelectorName?: string;
  LanguageCode?: string;
  LanguageDescription?: string;
  Name?: string;
}
export interface CaptionDestinationSettings {
  AribDestinationSettings?: AribDestinationSettings;
  EbuTtDDestinationSettings?: EbuTtDDestinationSettings;
  SmpteTtDestinationSettings?: SmpteTtDestinationSettings;
  EmbeddedPlusScte20DestinationSettings?: EmbeddedPlusScte20DestinationSettings;
  TtmlDestinationSettings?: TtmlDestinationSettings;
  Scte20PlusEmbeddedDestinationSettings?: Scte20PlusEmbeddedDestinationSettings;
  DvbSubDestinationSettings?: DvbSubDestinationSettings;
  TeletextDestinationSettings?: TeletextDestinationSettings;
  BurnInDestinationSettings?: BurnInDestinationSettings;
  WebvttDestinationSettings?: WebvttDestinationSettings;
  EmbeddedDestinationSettings?: EmbeddedDestinationSettings;
  RtmpCaptionInfoDestinationSettings?: RtmpCaptionInfoDestinationSettings;
  Scte27DestinationSettings?: Scte27DestinationSettings;
}
export interface AribDestinationSettings {}
export interface EbuTtDDestinationSettings {
  FontFamily?: string;
  StyleControl?: string;
  CopyrightHolder?: string;
  FillLineGap?: string;
}
export interface SmpteTtDestinationSettings {}
export interface EmbeddedPlusScte20DestinationSettings {}
export interface TtmlDestinationSettings {
  StyleControl?: string;
}
export interface Scte20PlusEmbeddedDestinationSettings {}
export interface DvbSubDestinationSettings {
  BackgroundOpacity?: number;
  FontResolution?: number;
  OutlineColor?: string;
  FontColor?: string;
  ShadowColor?: string;
  ShadowOpacity?: number;
  Font?: InputLocation;
  ShadowYOffset?: number;
  Alignment?: string;
  XPosition?: number;
  FontSize?: string;
  YPosition?: number;
  OutlineSize?: number;
  TeletextGridControl?: string;
  FontOpacity?: number;
  ShadowXOffset?: number;
  BackgroundColor?: string;
}
export interface TeletextDestinationSettings {}
export interface BurnInDestinationSettings {
  BackgroundOpacity?: number;
  FontResolution?: number;
  OutlineColor?: string;
  FontColor?: string;
  ShadowColor?: string;
  ShadowOpacity?: number;
  Font?: InputLocation;
  ShadowYOffset?: number;
  Alignment?: string;
  XPosition?: number;
  FontSize?: string;
  YPosition?: number;
  OutlineSize?: number;
  TeletextGridControl?: string;
  FontOpacity?: number;
  ShadowXOffset?: number;
  BackgroundColor?: string;
}
export interface WebvttDestinationSettings {
  StyleControl?: string;
}
export interface EmbeddedDestinationSettings {}
export interface RtmpCaptionInfoDestinationSettings {}
export interface Scte27DestinationSettings {}
export interface AvailConfiguration {
  AvailSettings?: AvailSettings;
}
export interface AvailSettings {
  Scte35SpliceInsert?: Scte35SpliceInsert;
  Scte35TimeSignalApos?: Scte35TimeSignalApos;
}
export interface Scte35SpliceInsert {
  AdAvailOffset?: number;
  WebDeliveryAllowedFlag?: string;
  NoRegionalBlackoutFlag?: string;
}
export interface Scte35TimeSignalApos {
  AdAvailOffset?: number;
  WebDeliveryAllowedFlag?: string;
  NoRegionalBlackoutFlag?: string;
}
export interface OutputGroup {
  Outputs?: Output[];
  OutputGroupSettings?: OutputGroupSettings;
  Name?: string;
}
export interface Output {
  OutputSettings?: OutputSettings;
  CaptionDescriptionNames?: string[];
  AudioDescriptionNames?: string[];
  OutputName?: string;
  VideoDescriptionName?: string;
}
export interface OutputSettings {
  MediaPackageOutputSettings?: MediaPackageOutputSettings;
  MsSmoothOutputSettings?: MsSmoothOutputSettings;
  FrameCaptureOutputSettings?: FrameCaptureOutputSettings;
  HlsOutputSettings?: HlsOutputSettings;
  RtmpOutputSettings?: RtmpOutputSettings;
  UdpOutputSettings?: UdpOutputSettings;
  MultiplexOutputSettings?: MultiplexOutputSettings;
  ArchiveOutputSettings?: ArchiveOutputSettings;
}
export interface MediaPackageOutputSettings {}
export interface MsSmoothOutputSettings {
  NameModifier?: string;
  H265PackagingType?: string;
}
export interface FrameCaptureOutputSettings {
  NameModifier?: string;
}
export interface HlsOutputSettings {
  HlsSettings?: HlsSettings;
  NameModifier?: string;
  H265PackagingType?: string;
  SegmentModifier?: string;
}
export interface HlsSettings {
  Fmp4HlsSettings?: Fmp4HlsSettings;
  FrameCaptureHlsSettings?: FrameCaptureHlsSettings;
  StandardHlsSettings?: StandardHlsSettings;
  AudioOnlyHlsSettings?: AudioOnlyHlsSettings;
}
export interface Fmp4HlsSettings {
  AudioRenditionSets?: string;
  NielsenId3Behavior?: string;
  TimedMetadataBehavior?: string;
}
export interface FrameCaptureHlsSettings {}
export interface StandardHlsSettings {
  AudioRenditionSets?: string;
  M3u8Settings?: M3U8Settings;
}
export interface M3U8Settings {
  PatInterval?: number;
  ProgramNum?: number;
  PcrPeriod?: number;
  PmtInterval?: number;
  NielsenId3Behavior?: string;
  PcrPid?: string;
  VideoPid?: string;
  AudioFramesPerPes?: number;
  TransportStreamId?: number;
  PmtPid?: string;
  Scte35Pid?: string;
  Scte35Behavior?: string;
  EcmPid?: string;
  TimedMetadataPid?: string;
  AudioPids?: string;
  PcrControl?: string;
  TimedMetadataBehavior?: string;
}
export interface AudioOnlyHlsSettings {
  SegmentType?: string;
  AudioTrackType?: string;
  AudioGroupId?: string;
  AudioOnlyImage?: InputLocation;
}
export interface RtmpOutputSettings {
  Destination?: OutputLocationRef;
  CertificateMode?: string;
  NumRetries?: number;
  ConnectionRetryInterval?: number;
}
export interface OutputLocationRef {
  DestinationRefId?: string;
}
export interface UdpOutputSettings {
  Destination?: OutputLocationRef;
  FecOutputSettings?: FecOutputSettings;
  BufferMsec?: number;
  ContainerSettings?: UdpContainerSettings;
}
export interface FecOutputSettings {
  ColumnDepth?: number;
  IncludeFec?: string;
  RowLength?: number;
}
export interface UdpContainerSettings {
  M2tsSettings?: M2TsSettings;
}
export interface M2TsSettings {
  EtvPlatformPid?: string;
  PatInterval?: number;
  ProgramNum?: number;
  RateMode?: string;
  KlvDataPids?: string;
  NullPacketBitrate?: number;
  PmtInterval?: number;
  AribCaptionsPid?: string;
  EsRateInPes?: string;
  VideoPid?: string;
  TransportStreamId?: number;
  EbpPlacement?: string;
  DvbSubPids?: string;
  SegmentationStyle?: string;
  Scte35Pid?: string;
  AudioStreamType?: string;
  Klv?: string;
  EbpLookaheadMs?: number;
  DvbTdtSettings?: DvbTdtSettings;
  TimedMetadataBehavior?: string;
  EbpAudioInterval?: string;
  FragmentTime?: number;
  DvbTeletextPid?: string;
  Scte35Control?: string;
  PcrPeriod?: number;
  NielsenId3Behavior?: string;
  PcrPid?: string;
  SegmentationTime?: number;
  CcDescriptor?: string;
  AudioFramesPerPes?: number;
  AbsentInputAudioBehavior?: string;
  Bitrate?: number;
  PmtPid?: string;
  Scte27Pids?: string;
  SegmentationMarkers?: string;
  DvbNitSettings?: DvbNitSettings;
  DvbSdtSettings?: DvbSdtSettings;
  EtvSignalPid?: string;
  Arib?: string;
  BufferModel?: string;
  EcmPid?: string;
  TimedMetadataPid?: string;
  AudioPids?: string;
  AudioBufferModel?: string;
  Ebif?: string;
  AribCaptionsPidControl?: string;
  PcrControl?: string;
}
export interface DvbTdtSettings {
  RepInterval?: number;
}
export interface DvbNitSettings {
  NetworkName?: string;
  NetworkId?: number;
  RepInterval?: number;
}
export interface DvbSdtSettings {
  ServiceProviderName?: string;
  OutputSdt?: string;
  ServiceName?: string;
  RepInterval?: number;
}
export interface MultiplexOutputSettings {
  Destination?: OutputLocationRef;
}
export interface ArchiveOutputSettings {
  Extension?: string;
  NameModifier?: string;
  ContainerSettings?: ArchiveContainerSettings;
}
export interface ArchiveContainerSettings {
  M2tsSettings?: M2TsSettings;
  RawSettings?: RawSettings;
}
export interface RawSettings {}
export interface OutputGroupSettings {
  HlsGroupSettings?: HlsGroupSettings;
  FrameCaptureGroupSettings?: FrameCaptureGroupSettings;
  MultiplexGroupSettings?: MultiplexGroupSettings;
  ArchiveGroupSettings?: ArchiveGroupSettings;
  MediaPackageGroupSettings?: MediaPackageGroupSettings;
  UdpGroupSettings?: UdpGroupSettings;
  MsSmoothGroupSettings?: MsSmoothGroupSettings;
  RtmpGroupSettings?: RtmpGroupSettings;
}
export interface HlsGroupSettings {
  SegmentationMode?: string;
  Destination?: OutputLocationRef;
  CodecSpecification?: string;
  IvSource?: string;
  TimedMetadataId3Frame?: string;
  KeyFormatVersions?: string;
  RedundantManifest?: string;
  OutputSelection?: string;
  KeyProviderSettings?: KeyProviderSettings;
  StreamInfResolution?: string;
  CaptionLanguageMappings?: CaptionLanguageMapping[];
  HlsId3SegmentTagging?: string;
  IFrameOnlyPlaylists?: string;
  CaptionLanguageSetting?: string;
  KeepSegments?: number;
  ConstantIv?: string;
  DirectoryStructure?: string;
  EncryptionType?: string;
  AdMarkers?: string[];
  HlsCdnSettings?: HlsCdnSettings;
  IndexNSegments?: number;
  DiscontinuityTags?: string;
  InputLossAction?: string;
  Mode?: string;
  TsFileMode?: string;
  BaseUrlManifest1?: string;
  ClientCache?: string;
  MinSegmentLength?: number;
  KeyFormat?: string;
  IvInManifest?: string;
  BaseUrlContent1?: string;
  ProgramDateTimeClock?: string;
  ManifestCompression?: string;
  ManifestDurationFormat?: string;
  TimedMetadataId3Period?: number;
  IncompleteSegmentBehavior?: string;
  ProgramDateTimePeriod?: number;
  SegmentLength?: number;
  TimestampDeltaMilliseconds?: number;
  ProgramDateTime?: string;
  SegmentsPerSubdirectory?: number;
  BaseUrlContent?: string;
  BaseUrlManifest?: string;
}
export interface KeyProviderSettings {
  StaticKeySettings?: StaticKeySettings;
}
export interface StaticKeySettings {
  KeyProviderServer?: InputLocation;
  StaticKeyValue?: string;
}
export interface CaptionLanguageMapping {
  LanguageCode?: string;
  LanguageDescription?: string;
  CaptionChannel?: number;
}
export interface HlsCdnSettings {
  HlsWebdavSettings?: HlsWebdavSettings;
  HlsS3Settings?: HlsS3Settings;
  HlsBasicPutSettings?: HlsBasicPutSettings;
  HlsMediaStoreSettings?: HlsMediaStoreSettings;
  HlsAkamaiSettings?: HlsAkamaiSettings;
}
export interface HlsWebdavSettings {
  FilecacheDuration?: number;
  RestartDelay?: number;
  NumRetries?: number;
  ConnectionRetryInterval?: number;
  HttpTransferMode?: string;
}
export interface HlsS3Settings {
  CannedAcl?: string;
}
export interface HlsBasicPutSettings {
  FilecacheDuration?: number;
  RestartDelay?: number;
  NumRetries?: number;
  ConnectionRetryInterval?: number;
}
export interface HlsMediaStoreSettings {
  FilecacheDuration?: number;
  MediaStoreStorageClass?: string;
  RestartDelay?: number;
  NumRetries?: number;
  ConnectionRetryInterval?: number;
}
export interface HlsAkamaiSettings {
  Salt?: string;
  FilecacheDuration?: number;
  NumRetries?: number;
  Token?: string;
  RestartDelay?: number;
  ConnectionRetryInterval?: number;
  HttpTransferMode?: string;
}
export interface FrameCaptureGroupSettings {
  FrameCaptureCdnSettings?: FrameCaptureCdnSettings;
  Destination?: OutputLocationRef;
}
export interface FrameCaptureCdnSettings {
  FrameCaptureS3Settings?: FrameCaptureS3Settings;
}
export interface FrameCaptureS3Settings {
  CannedAcl?: string;
}
export interface MultiplexGroupSettings {}
export interface ArchiveGroupSettings {
  Destination?: OutputLocationRef;
  ArchiveCdnSettings?: ArchiveCdnSettings;
  RolloverInterval?: number;
}
export interface ArchiveCdnSettings {
  ArchiveS3Settings?: ArchiveS3Settings;
}
export interface ArchiveS3Settings {
  CannedAcl?: string;
}
export interface MediaPackageGroupSettings {
  Destination?: OutputLocationRef;
}
export interface UdpGroupSettings {
  TimedMetadataId3Frame?: string;
  TimedMetadataId3Period?: number;
  InputLossAction?: string;
}
export interface MsSmoothGroupSettings {
  SegmentationMode?: string;
  Destination?: OutputLocationRef;
  EventStopBehavior?: string;
  FilecacheDuration?: number;
  CertificateMode?: string;
  AcquisitionPointId?: string;
  StreamManifestBehavior?: string;
  InputLossAction?: string;
  FragmentLength?: number;
  RestartDelay?: number;
  SparseTrackType?: string;
  EventIdMode?: string;
  TimestampOffsetMode?: string;
  AudioOnlyTimecodeControl?: string;
  NumRetries?: number;
  TimestampOffset?: string;
  EventId?: string;
  SendDelayMs?: number;
  ConnectionRetryInterval?: number;
}
export interface RtmpGroupSettings {
  AuthenticationScheme?: string;
  CacheLength?: number;
  AdMarkers?: string[];
  InputLossAction?: string;
  RestartDelay?: number;
  CaptionData?: string;
  CacheFullBehavior?: string;
}
export interface AvailBlanking {
  State?: string;
  AvailBlankingImage?: InputLocation;
}
export interface NielsenConfiguration {
  DistributorId?: string;
  NielsenPcmToId3Tagging?: string;
}
export interface BlackoutSlate {
  NetworkId?: string;
  NetworkEndBlackoutImage?: InputLocation;
  NetworkEndBlackout?: string;
  State?: string;
  BlackoutSlateImage?: InputLocation;
}
export interface TimecodeConfig {
  SyncThreshold?: number;
  Source?: string;
}
export interface CdiInputSpecification {
  Resolution?: string;
}
