/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A network port number
 */
export type Port = number;

/**
 * Resource Type definition for AWS::GlobalAccelerator::EndpointGroup
 */
export interface AwsGlobalacceleratorEndpointgroup {
  /**
   * The Amazon Resource Name (ARN) of the listener
   */
  ListenerArn: string;
  /**
   * The name of the AWS Region where the endpoint group is located
   */
  EndpointGroupRegion: string;
  /**
   * The list of endpoint objects.
   */
  EndpointConfigurations?: EndpointConfiguration[];
  /**
   * The percentage of traffic to sent to an AWS Region
   */
  TrafficDialPercentage?: number;
  /**
   * The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
   */
  HealthCheckPort?: number;
  /**
   * The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
   */
  HealthCheckProtocol?: "TCP" | "HTTP" | "HTTPS";
  HealthCheckPath?: string;
  /**
   * The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
   */
  HealthCheckIntervalSeconds?: number;
  /**
   * The number of consecutive health checks required to set the state of the endpoint to unhealthy.
   */
  ThresholdCount?: number;
  /**
   * The Amazon Resource Name (ARN) of the endpoint group
   */
  EndpointGroupArn?: string;
  PortOverrides?: PortOverride[];
}
/**
 * The configuration for a given endpoint
 */
export interface EndpointConfiguration {
  /**
   * Id of the endpoint. For Network/Application Load Balancer this value is the ARN.  For EIP, this value is the allocation ID.  For EC2 instances, this is the EC2 instance ID
   */
  EndpointId: string;
  /**
   * The weight for the endpoint.
   */
  Weight?: number;
  /**
   * true if client ip should be preserved
   */
  ClientIPPreservationEnabled?: boolean;
}
/**
 * listener to endpoint port mapping.
 */
export interface PortOverride {
  ListenerPort: Port;
  EndpointPort: Port;
}
