/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::KinesisFirehose::DeliveryStream
 */
export interface AwsKinesisfirehoseDeliverystream {
  Arn?: string;
  DeliveryStreamEncryptionConfigurationInput?: DeliveryStreamEncryptionConfigurationInput;
  DeliveryStreamName?: string;
  DeliveryStreamType?: "DirectPut" | "KinesisStreamAsSource";
  ElasticsearchDestinationConfiguration?: ElasticsearchDestinationConfiguration;
  AmazonopensearchserviceDestinationConfiguration?: AmazonopensearchserviceDestinationConfiguration;
  AmazonOpenSearchServerlessDestinationConfiguration?: AmazonOpenSearchServerlessDestinationConfiguration;
  ExtendedS3DestinationConfiguration?: ExtendedS3DestinationConfiguration;
  KinesisStreamSourceConfiguration?: KinesisStreamSourceConfiguration;
  RedshiftDestinationConfiguration?: RedshiftDestinationConfiguration;
  S3DestinationConfiguration?: S3DestinationConfiguration;
  SplunkDestinationConfiguration?: SplunkDestinationConfiguration;
  HttpEndpointDestinationConfiguration?: HttpEndpointDestinationConfiguration;
  /**
   * @minItems 1
   * @maxItems 50
   */
  Tags?: [Tag, ...Tag[]];
}
export interface DeliveryStreamEncryptionConfigurationInput {
  KeyARN?: string;
  KeyType: "AWS_OWNED_CMK" | "CUSTOMER_MANAGED_CMK";
}
export interface ElasticsearchDestinationConfiguration {
  BufferingHints?: ElasticsearchBufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  DomainARN?: string;
  IndexName: string;
  IndexRotationPeriod?: "NoRotation" | "OneHour" | "OneDay" | "OneWeek" | "OneMonth";
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: ElasticsearchRetryOptions;
  RoleARN: string;
  S3BackupMode?: "FailedDocumentsOnly" | "AllDocuments";
  S3Configuration: S3DestinationConfiguration;
  ClusterEndpoint?: string;
  TypeName?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface ElasticsearchBufferingHints {
  IntervalInSeconds?: number;
  SizeInMBs?: number;
}
export interface CloudWatchLoggingOptions {
  Enabled?: boolean;
  LogGroupName?: string;
  LogStreamName?: string;
}
export interface ProcessingConfiguration {
  Enabled?: boolean;
  Processors?: Processor[];
}
export interface Processor {
  Parameters?: ProcessorParameter[];
  Type: "RecordDeAggregation" | "Lambda" | "MetadataExtraction" | "AppendDelimiterToRecord";
}
export interface ProcessorParameter {
  ParameterName: string;
  ParameterValue: string;
}
export interface ElasticsearchRetryOptions {
  DurationInSeconds?: number;
}
export interface S3DestinationConfiguration {
  BucketARN: string;
  BufferingHints?: BufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  CompressionFormat?: "UNCOMPRESSED" | "GZIP" | "ZIP" | "Snappy" | "HADOOP_SNAPPY";
  EncryptionConfiguration?: EncryptionConfiguration;
  ErrorOutputPrefix?: string;
  Prefix?: string;
  RoleARN: string;
}
export interface BufferingHints {
  IntervalInSeconds?: number;
  SizeInMBs?: number;
}
export interface EncryptionConfiguration {
  KMSEncryptionConfig?: KMSEncryptionConfig;
  NoEncryptionConfig?: "NoEncryption";
}
export interface KMSEncryptionConfig {
  AWSKMSKeyARN: string;
}
export interface VpcConfiguration {
  RoleARN: string;
  /**
   * @minItems 1
   * @maxItems 16
   */
  SubnetIds:
    | [string]
    | [string, string]
    | [string, string, string]
    | [string, string, string, string]
    | [string, string, string, string, string]
    | [string, string, string, string, string, string]
    | [string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string, string, string, string, string]
    | [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    | [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ];
  /**
   * @minItems 1
   * @maxItems 5
   */
  SecurityGroupIds:
    | [string]
    | [string, string]
    | [string, string, string]
    | [string, string, string, string]
    | [string, string, string, string, string];
}
export interface AmazonopensearchserviceDestinationConfiguration {
  BufferingHints?: AmazonopensearchserviceBufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  DomainARN?: string;
  IndexName: string;
  IndexRotationPeriod?: "NoRotation" | "OneHour" | "OneDay" | "OneWeek" | "OneMonth";
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: AmazonopensearchserviceRetryOptions;
  RoleARN: string;
  S3BackupMode?: "FailedDocumentsOnly" | "AllDocuments";
  S3Configuration: S3DestinationConfiguration;
  ClusterEndpoint?: string;
  TypeName?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface AmazonopensearchserviceBufferingHints {
  IntervalInSeconds?: number;
  SizeInMBs?: number;
}
export interface AmazonopensearchserviceRetryOptions {
  DurationInSeconds?: number;
}
export interface AmazonOpenSearchServerlessDestinationConfiguration {
  BufferingHints?: AmazonOpenSearchServerlessBufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  IndexName: string;
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: AmazonOpenSearchServerlessRetryOptions;
  RoleARN: string;
  S3BackupMode?: "FailedDocumentsOnly" | "AllDocuments";
  S3Configuration: S3DestinationConfiguration;
  CollectionEndpoint?: string;
  VpcConfiguration?: VpcConfiguration;
}
export interface AmazonOpenSearchServerlessBufferingHints {
  IntervalInSeconds?: number;
  SizeInMBs?: number;
}
export interface AmazonOpenSearchServerlessRetryOptions {
  DurationInSeconds?: number;
}
export interface ExtendedS3DestinationConfiguration {
  BucketARN: string;
  BufferingHints?: BufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  CompressionFormat?: "UNCOMPRESSED" | "GZIP" | "ZIP" | "Snappy" | "HADOOP_SNAPPY";
  DataFormatConversionConfiguration?: DataFormatConversionConfiguration;
  DynamicPartitioningConfiguration?: DynamicPartitioningConfiguration;
  EncryptionConfiguration?: EncryptionConfiguration;
  ErrorOutputPrefix?: string;
  Prefix?: string;
  ProcessingConfiguration?: ProcessingConfiguration;
  RoleARN: string;
  S3BackupConfiguration?: S3DestinationConfiguration;
  S3BackupMode?: "Disabled" | "Enabled";
}
export interface DataFormatConversionConfiguration {
  Enabled?: boolean;
  InputFormatConfiguration?: InputFormatConfiguration;
  OutputFormatConfiguration?: OutputFormatConfiguration;
  SchemaConfiguration?: SchemaConfiguration;
}
export interface InputFormatConfiguration {
  Deserializer?: Deserializer;
}
export interface Deserializer {
  HiveJsonSerDe?: HiveJsonSerDe;
  OpenXJsonSerDe?: OpenXJsonSerDe;
}
export interface HiveJsonSerDe {
  TimestampFormats?: string[];
}
export interface OpenXJsonSerDe {
  CaseInsensitive?: boolean;
  ColumnToJsonKeyMappings?: {
    /**
     * This interface was referenced by `undefined`'s JSON-Schema definition
     * via the `patternProperty` "[a-zA-Z0-9]+".
     */
    [k: string]: string;
  };
  ConvertDotsInJsonKeysToUnderscores?: boolean;
}
export interface OutputFormatConfiguration {
  Serializer?: Serializer;
}
export interface Serializer {
  OrcSerDe?: OrcSerDe;
  ParquetSerDe?: ParquetSerDe;
}
export interface OrcSerDe {
  BlockSizeBytes?: number;
  BloomFilterColumns?: string[];
  BloomFilterFalsePositiveProbability?: number;
  Compression?: string;
  DictionaryKeyThreshold?: number;
  EnablePadding?: boolean;
  FormatVersion?: string;
  PaddingTolerance?: number;
  RowIndexStride?: number;
  StripeSizeBytes?: number;
}
export interface ParquetSerDe {
  BlockSizeBytes?: number;
  Compression?: string;
  EnableDictionaryCompression?: boolean;
  MaxPaddingBytes?: number;
  PageSizeBytes?: number;
  WriterVersion?: string;
}
export interface SchemaConfiguration {
  CatalogId?: string;
  DatabaseName?: string;
  Region?: string;
  RoleARN?: string;
  TableName?: string;
  VersionId?: string;
}
export interface DynamicPartitioningConfiguration {
  Enabled?: boolean;
  RetryOptions?: RetryOptions;
}
export interface RetryOptions {
  DurationInSeconds?: number;
}
export interface KinesisStreamSourceConfiguration {
  KinesisStreamARN: string;
  RoleARN: string;
}
export interface RedshiftDestinationConfiguration {
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  ClusterJDBCURL: string;
  CopyCommand: CopyCommand;
  Password: string;
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: RedshiftRetryOptions;
  RoleARN: string;
  S3BackupConfiguration?: S3DestinationConfiguration;
  S3BackupMode?: "Disabled" | "Enabled";
  S3Configuration: S3DestinationConfiguration;
  Username: string;
}
export interface CopyCommand {
  CopyOptions?: string;
  DataTableColumns?: string;
  DataTableName: string;
}
export interface RedshiftRetryOptions {
  DurationInSeconds?: number;
}
export interface SplunkDestinationConfiguration {
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  HECAcknowledgmentTimeoutInSeconds?: number;
  HECEndpoint: string;
  HECEndpointType: "Raw" | "Event";
  HECToken: string;
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: SplunkRetryOptions;
  S3BackupMode?: string;
  S3Configuration: S3DestinationConfiguration;
}
export interface SplunkRetryOptions {
  DurationInSeconds?: number;
}
export interface HttpEndpointDestinationConfiguration {
  RoleARN?: string;
  EndpointConfiguration: HttpEndpointConfiguration;
  RequestConfiguration?: HttpEndpointRequestConfiguration;
  BufferingHints?: BufferingHints;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions;
  ProcessingConfiguration?: ProcessingConfiguration;
  RetryOptions?: RetryOptions;
  S3BackupMode?: string;
  S3Configuration: S3DestinationConfiguration;
}
export interface HttpEndpointConfiguration {
  Url: string;
  AccessKey?: string;
  Name?: string;
}
export interface HttpEndpointRequestConfiguration {
  ContentEncoding?: "NONE" | "GZIP";
  /**
   * @minItems 0
   * @maxItems 50
   */
  CommonAttributes?: HttpEndpointCommonAttribute[];
}
export interface HttpEndpointCommonAttribute {
  AttributeName: string;
  AttributeValue: string;
}
export interface Tag {
  Key: string;
  Value?: string;
  [k: string]: unknown;
}
